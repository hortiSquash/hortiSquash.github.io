@font-face {
    font-family: WarframeIcons;
    src: url(WarframeIcons.woff) format('woff');
}

body {
    font-family: Arial, sans-serif, WarframeIcons;
    background-color: var(--color-background);
    color: var(--color-text);
}

:root {
    --mod-width: 240px;
    --mod-height: 120px;
    --buff-count: 3;
    --mod-margin-horizontal: 5px;
    --mod-margin-vertical: 5px;
    --mod-gap: calc(2 * var(--mod-margin-vertical)) calc(2 * var(--mod-margin-horizontal));

    --unit-size: 0.8rem;

    --color-text: black;
    --color-background: #ddd;
    --color-borders: #bbb;

    --color-input-text: black;
    --color-input-background: white;
    --color-input-text-placeholder: grey;
    --color-button-text: black;
    --color-button-background: white;
    --color-mod-background: #c6c6c6;
    --color-weapon-background: rgba(0, 0, 0, 0.1);
    --color-indented: grey;
    --color-hovered: blue;
    --color-modbuff: green;
    --color-modnerf: red;
    --mod-empty-background-filter: invert() opacity(30%);
    --color-mod-empty-background: rgba(0, 0, 0, 0.7);
    --color-hits-background: white;
    --color-plot-background: lightgray;

    --color-TR-even: rgba(0, 0, 0, 0.05);
    --color-TR-header: rgba(0, 0, 0, 0.2);

    --color-tooltip: grey;
    --color-tooltip-background: rgba(0, 0, 0, 0.7);
    --color-tooltip-text: white;
}

body[dark] {
    --color-text: #ddd;
    --color-background: #3a3b3c;
    --color-borders: #606060;

    --color-input-text: black;
    --color-input-background: white;
    --color-input-text-placeholder: grey;
    --color-button-text: black;
    --color-button-background: white;
    --color-mod-background: #3c3c3c;
    --color-weapon-background: rgba(0, 0, 0, 0.1);
    --color-indented: #bbb;
    --color-hovered: #69b5fb;
    --color-modbuff: #62c162;
    --color-modnerf: #f63939;
    --mod-empty-background-filter: opacity(30%);
    --color-mod-empty-background: rgba(255, 255, 255, 0.7);
    --color-hits-background: #5b5c5c;
    --color-plot-background: #333;

    --color-TR-even: rgba(0, 0, 0, 0.05);
    --color-TR-header: rgba(0, 0, 0, 0.2);

    --color-tooltip: #bbb;
    --color-tooltip-background: rgba(0, 0, 0, 0.7);
    --color-tooltip-text: white;
}

dialog {
    color: inherit;
    background-color: inherit;
    border-color: var(--color-borders);
}

button {
    color: var(--color-button-text);
    /* background-color: black; */
}

select {
    color: var(--color-button-text);
    /* background-color: black; */

    &:disabled {
        /* TODO */
    }
}

input {
    /* TODO it looks like shit with borders (default browser shit)
        background-color: var(--color-input-background); */
    color: var(--color-input-text);

    &::placeholder {
        color: var(--color-input-text-placeholder);
    }

    &:disabled {
        /* TODO */
    }
}

.input_with_unit {
    > span {
        font-size: small;
        display: inline-block;
        width: var(--unit-size);
        position: relative;
        color: var(--color-input-text);

        &:empty {
            display: none;
        }
    }

    > input {
        text-align: right;
        outline-offset: 1px;
        width: calc(100% - var(--unit-size));
        padding: 0;
    }

    /* if span at the end */
    > input:has(+ span) {
        padding-right: var(--unit-size);
    }
    > input + span {
        margin-left: calc(-1 * var(--unit-size));
        text-align: left;
    }

    /* if span at the beginning */
    > span:has(+ input) {
        margin-right: calc(-1 * var(--unit-size));
        text-align: right;
    }
    > span + input {
        padding-left: var(--unit-size);
    }

    /* if input sandwiched between two spans */
    > span + input:has(+ span) {
        width: calc(100% - 2 * var(--unit-size));
    }

    /* TODO make that work with 2 spans */
    &:has(> span:empty) > input {
        padding: 0;
        width: 100%;
    }

    &:has(> input:disabled) > span {
        color: grey;
    }

    &:has(> .hidden_input){
        &, > * {
            border: none;
            background: transparent;
            color: inherit;
        }
    }
}

#stats_wrapper .input_with_unit {
    > input {
        height: 16px;
        font: inherit;
    }
    &:has(> input:disabled) > * {
        color: inherit;
    }
    > ::placeholder{
        color: var(--color-text);
    }
}

#mod-dialog table > thead {
    background-color: var(--color-TR-header);
}

#enemy_wrapper {
    border: 2px solid var(--color-borders);
    width: 400px;
    height: 200px;
    overflow-y: auto;
    scrollbar-gutter: stable;

    & tr:nth-child(even) {
        background-color: var(--color-TR-even);
    }

    & thead > tr {
        position: sticky;
        background-color: var(--color-TR-header);
        top: 0;
        z-index: 1;
    }

    /*
    > table > :is(td, th) {
        border-left: 2px solid white;
        padding: 1px;
    }
    */

    & tfoot > tr:last-child {
        > * {
            z-index: 1;
            position: sticky;
            bottom: 0;
        }

        > :is(td, th) {
            background-color: var(--color-borders);
        }
    }
}

.add-enemy button {
    padding: 5px 10px;
    margin: 5px;
    margin-left: 50px;
}

.TTK_mean, .TTK_std {
    text-align: right;
}

.pen-button {
    color: inherit;
    cursor: pointer;
    padding: 0;
    border: none;
    background-color: transparent;
    font-size: 20px;
    line-height: 1;
}

.pen-button:hover {
    color: var(--color-hovered);
    text-shadow: 0px 0px 5px white;
}

#stance_wrapper > form > table > tfoot > tr:last-child > * {
    z-index: 1;
    position: sticky;
    bottom: 0;
}

#stance_edit_dialog {
    background-color: var(--color-background);
    /* min-width: 520px; */
    max-height: 80lvh;
    scrollbar-gutter: stable;

    padding: 0 0 0 10px;
}

#hits_table {
    width: 100%;
    border-spacing: 3px 15px;
}

#hits_wrapper {
    background-color: var(--color-hits-background);
}

.containerAddStat {
    text-align: center;
}

a.modebar-btn {
    font-size: 30px;
}

#grid {
    display: grid;
    grid-template-columns: max-content max-content max-content;
    grid-template-rows: max-content max-content max-content;
    gap: 10px 10px;
    grid-auto-flow: column;
    justify-content: start;
    justify-items: start;
    grid-template-areas:
        "stats_wrapper modding modding"
        "stats_wrapper plot mod-list"
        "other plot mod-list";
}

#loading_spinner {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    width: 50px;
    height: 50px;
    margin: -25px 0 0 -25px;
    border: 8px solid rgba(0, 0, 0, 0.1);
    border-left-color: #3498db;
    border-radius: 50%;
    z-index: 99;
    animation: spin 1s linear infinite;
}
@keyframes spin {
    to { transform: rotate(360deg); }
}

.other {
    grid-area: other;
    width: 100%;
}

#modding {
    grid-area: modding;

    display: grid;
    grid-template-areas:
        "stance exilus buffs_wrapper buffs_wrapper buffs_wrapper"
        "mod1 mod2 mod3 mod4 arcane1"
        "mod5 mod6 mod7 mod8 arcane2";
    gap: var(--mod-gap);
    width: fit-content;
    border: 2px solid var(--color-borders);
    padding: 10px;
}

#mod-list-wrapper{
    grid-area: mod-list;
    border:2px solid var(--color-borders);
    width: fit-content;
    padding: 10px;
}

#mod-list {
    display: grid;
    gap: var(--mod-gap);
    grid-auto-flow: column;
    grid-template-rows: 1fr 1fr 1fr;
    justify-content: start;

    margin-top: 10px;
    overflow-x: scroll;
    width: calc(2 * var(--mod-width) + (2 - 1) * 2 * var(--mod-margin-horizontal));
    /* 3 mods + 2 gaps + 6 borders = 3*240 + 2*10 + 6*2 = 752 */
    height: calc(3 * var(--mod-height) + (3 - 1) * 2 * var(--mod-margin-vertical) + 17px); /* scrollbar = 17px */
    /* 3*120 + 2*2*8 + 3*2 * 2px = 409px */

    /* TODO darkmode
        scrollbar-color: blue red; */
}

#plot {
    grid-area: plot;
    width: calc((3 * var(--mod-width) + (4 - 1) * 2 * var(--mod-margin-horizontal) + 5 * 2px /* mod border */ - 2 * 2px /* plot's own border */) - 10px /* grid gap */- 4px);
    /* height: 465px; */
    border: 2px solid var(--color-borders);

    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;

    &:empty{
        background: var(--color-plot-background);

        &::before{
            content: "ðŸ“Š";
            font-size: 64px;
        }
        &::after {
            content: "select weapon/enemy/mods and simulate";
            position: absolute;
            font-size: 36px;
            color: grey;
            transform: translateY(-150%);
        }
    }
}

#stats_wrapper {
    grid-area: stats_wrapper;
    width: 575px;
    /* max-content + some space for the graph ticks*/
    border: 2px solid var(--color-borders);
    position: relative;
    left: 0%;
}

.stats_damage_table {
    position: relative;
}

.stats_damage_table tr:nth-child(even) {
    background-color: var(--color-TR-even);
}

#stats_wrapper th {
    font-weight: normal;
}

#stats_wrapper thead th {
    position: sticky;
    background-color: var(--color-background);
    top: 0;
    z-index: 1;
    font-weight: normal;
}

/*
#stats_wrapper tfoot tr:nth-child(even) {
    position: sticky;
    background-color: var(--color-TR-header);
    bottom: 0;
    z-index: 1;
    background-color: red;
}
*/

.separate>td {
    border-bottom: 15px solid transparent;
}

.indented {
    padding-left: 1em;
    color: var(--color-indented);
}

div.tooltip {
    color: var(--color-tooltip);
    display: inline-block;
}

td.tooltip {
    background-color: var(--color-background);
    padding: 0;
}

.tooltip .tooltiptext {
    visibility: hidden;
    background: var(--color-tooltip-background);
    color: var(--color-tooltip-text);
    text-align: center;
    border-radius: 3px;
    padding: 5px;

    transform: translate(10px, -15%);
    position: fixed;
    z-index: 1;
}

.tooltip > .tooltiptable {
    visibility: hidden;
    background: var(--color-tooltip-background);
    color: var(--color-tooltip-text);
    text-align: left;
    border-radius: 3px;
    padding: 5px;

    transform: translate(24px, -50%);
    position: fixed;
    z-index: 1;
}

.tooltiptable th{
    width: 6.5rem;
}
.tooltiptable td{
    width: 6ch;
}

.tooltip:hover * {
    visibility: visible;
}

#stats_wrapper td:nth-child(2):not(table td td),
#stats_wrapper td:nth-child(3):not(table td td) {
    text-align: right;
}

.mod_buff, .less_is_more.mod_nerf {
    color: var(--color-modbuff);
}
.mod_nerf, .less_is_more.mod_buff {
    color: var(--color-modnerf);
}

.row_hide {
    display: none;
}

.row_show {
    display: table-row;
}

.graph_bar {
    height: 18px;
    width: 0%;
    white-space: nowrap;

    /*
    border-color: white;
    border-width: 1px;
    border-style: solid;
    border-left: none;
    border-right: none;
    */
}

.axis {
    position: absolute;
    top: 0;
    bottom: 0;
}

.tick {
    position: absolute;
    bottom: 15px;
    top: 0;
    border-right: 1px solid rgba(0, 0, 0, 0.15);
    font-size: 12px;
}

.tick::after {
    content: attr(data-value);
    position: absolute;
    left: 50%;
    transform: translate(-50%, 15px);
    bottom: 0;
}

/* All cells are fixed to the mod size */
.cell {
    width: var(--mod-width);
    height: var(--mod-height);
    border: 2px solid gold;
    background-color: var(--color-mod-background);
    font-family: Arial, sans-serif;
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
    cursor: pointer;
}

/* Empty mod and buff slots show dashed border with "Empty" */
.cell:empty {
    background: none;
    border: 2px dashed var(--color-borders);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: default;
}
.cell:empty::after {
    content: "+";
    position: absolute;
    font-size: 28px;
    color: var(--color-mod-empty-background);
    /* pointer-events: none; */
}

.cell.special-slot:empty::after {
    content: attr(data-slot_type);
    /* font-size: 18px; */
}

.cell.special-slot:empty::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    background-position: center;
    background-repeat: no-repeat;
    background-color: rgba(0, 0, 0, 0.05);
}
.cell.special-slot[data-slot_type="arcane"]:empty {
    &::after {
        content: "";
    }
    &::before {
        /* background-image: url("https://wiki.warframe.com/images/CosmeticEnhancer.png?6d4d8"); */
        background-image: url("https://browse.wf/Lotus/Interface/Icons/GenericCosmeticEnhancerIcon.png");
        background-size: 55%;
        filter: var(--mod-empty-background-filter);

    }
}
.cell.special-slot[data-slot_type="exilus"]:empty {
    &::after {
        content: "";
    }
    &::before {
        background-image: url("https://static.overframe.gg/static/images/icon-exilus.png");
        background-size: 55%;
        filter: var(--mod-empty-background-filter);
    }
}

#buffs_wrapper>.cell:empty {
    &::after {
        content: "buff";
        /* font-size: 18px; */
    }
    /*
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        background-position: center;
        background-repeat: no-repeat;
        background-color: rgba(0, 0, 0, 0.05);

        background-image: url("https://browse.wf/Lotus/Interface/Icons/MarketBundleUpgradeIcon.png");
        background-size: 55%;
        filter: var(--mod-empty-background-filter);
    }
    */
}

/* Stance slot styling */
.stance-slot {
    grid-area: stance;

    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--mod-height);
}

/* Scrollable buffs_wrapper container with calculated width */
#buffs_wrapper {
    width: calc(var(--buff-count) * var(--mod-width) + (var(--buff-count) - 1) * var(--mod-margin-horizontal) + 4 * (var(--buff-count) - 1) * 2px);
    overflow-x: scroll;
    display: flex;
    /* align-items: center;
    box-sizing: border-box;
    padding: 0; */
    gap: var(--mod-gap);
}

/* Buff slots inherit the same fixed cell size */
.buff-slot {
    flex: 0 0 auto;
}

/* Mod inner structure */
.mod-name {
    /* background: #ddd; */
    font-weight: bold;
    min-height: 30px;
    text-align: center;
    align-content: center;
}
.remove {
    position: absolute;
    top: 5px;
    right: 5px;
    width: 18px;
    height: 18px;
    line-height: 18px;
    font-size: 12px;
    cursor: pointer;
    color: white;
    background: rgba(226,74,74,0.6);
    /* border-radius: 50%; */
    display: none;
}
#modding .mod-name:hover .remove { display: block; }
.remove:hover { background: rgba(226,74,74,0.8); }
.cell.dragging { opacity: 0.5; }

/* Mod cell stats table */
.mod-stats {
    width: 100%;
    /* height: calc(100% - 30px); */
    /* overflow-y: auto; */
    border-collapse: collapse;
}
.mod-stats td {
    /* border: 1px solid #ddd; */
    padding: 2px 4px;
    font-size: 12px;
}

.d-none {
    display: none;
}

/* TODO better colors with unified contrast */
.mod-rarity-common {
    border-color: darkgoldenrod;
}
.mod-rarity-uncommon {
    border-color: silver;
}
.mod-rarity-rare {
    border-color: gold;
}
.mod-rarity-legendary {
    border-color: lightblue;
}
.mod-rarity-archon {
    border-color: orange;
}
.mod-rarity-galvanized {
    border-color: slategray;
}
.mod-rarity-riven {
    border-color: darkorchid;
}
.mod-rarity-amalgam {
    border-color: peachpuff;
}

.damage-glyph {
    font-size: small;
    height:15px;
    width:15px;
    margin: -1px;
}